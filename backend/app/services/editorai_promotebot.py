# -*- coding: utf-8 -*-
"""EditorAI_promotebot.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ctAkxTyhMjOSajHEKX0i8g65WgcUnAFo
"""







# pip install azure-identity
# pip install --upgrade keras-nlp
# pip install azure-keyvault-secrets

from transformers import AutoTokenizer, AutoModelForSeq2SeqLM, T5Tokenizer, T5ForConditionalGeneration
import os
import keras
import keras_nlp
from azure.identity import DefaultAzureCredential
from azure.keyvault.secrets import SecretClient


class PromoteBot:
  def __init__(self):
        # Initialize models

        self.copy_model = keras_nlp.models.GemmaCausalLM.from_preset("gemma_2b_en")

        # Set environment variables
         # Set environment variables
        credential = DefaultAzureCredential()
        vault_url = "https://kagglegemma.vault.azure.net"  # Update with your Key Vault URL
        secret_client = SecretClient(vault_url=vault_url, credential=credential)

        try:
            # Get username and API key from Key Vault secrets
            username_secret = secret_client.get_secret("Username").value
            api_key_secret = secret_client.get_secret("Key").value

            # Set environment variables
            os.environ["KAGGLE_USERNAME"] = username_secret
            os.environ["KAGGLE_KEY"] = api_key_secret
        except Exception as e:
            print("Error:", e)
            os.environ["KAGGLE_USERNAME"] = "your_username"
            os.environ["KAGGLE_KEY"] = "your_key"

        os.environ["KERAS_BACKEND"] = "jax"
        os.environ["XLA_PYTHON_CLIENT_MEM_FRACTION"] = "0.9"

         # Authenticate with Twitter/other social API
         #FB
         #INSTA
        # def process_social():
        #     article_text = request.form['article_text'] # INPUT HTML TEXT FROM USER
        #     result = self.process_social_request(option_text, article_text)
        #     return result


  def create_social_media_copy(self, article):
        input_text = f"Craft a social media transcript for the following text that is both engaging, with emojis and Emphasizes the core message of the article, Keep the tone positive and relatable. : {article}"
        social_media_copy = self.copy_model.generate(input_text, max_length=300)
        return social_media_copy
  def process_social_request(self, option_text, article_text):
        if option_text == 'Twitter':
            # Print SM Copy to Twitter/ Need APIKEY box
            pass
        elif option_text == 'Facebook':
            # Print SM Copy to Facebook/APIKEY bos
            pass
        elif option_text == 'Instagram':
            # Print SM Copy to Instagram/APIKEY
            pass
        else:
            return "Invalid option selected. Please select Twitter, Facebook, or Instagram."







"""â€¦."""